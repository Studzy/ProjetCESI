@using ProjetCESI.Web.Models
@model RessourceViewModel

@section TopScripts {
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
}

@if (Model.Statut == ProjetCESI.Core.Statut.Suspendre)
{
    <div class="alert alert-warning" role="alert">
        Cette ressource a été suspendue !
    </div>
}

@{
    ViewData["Title"] = Model.Titre;
}

<div class="ressource-header row">
    <div class="col-md-8">
        <div class="d-flex">
            <h3>@Model.Titre</h3>&nbsp;
            @if (Model.RessourceOfficielle)
            {
                <text><span><img title="Ressource officielle" src="~/images/008-check.png" style="margin-left: 0.25em; margin-top: 0.35em" width="26" /></span>&nbsp;</text>
            }
            @if (User.Identity.IsAuthenticated && (Model.Utilisateur.Id == Model.UtilisateurCreateur.Id || Model.UtilisateurRole == ProjetCESI.Core.TypeUtilisateur.Admin || Model.UtilisateurRole == ProjetCESI.Core.TypeUtilisateur.SuperAdmin))
            {
                <a class="m-1" href="/CreateArticle/Edit/@Model.RessourceId" title="Editer"><img src="~/images/edit.png" width="28" /></a>
            }
            @if (User.Identity.IsAuthenticated && User.IsInRole(Enum.GetName(ProjetCESI.Core.TypeUtilisateur.Admin)) || User.IsInRole(Enum.GetName(ProjetCESI.Core.TypeUtilisateur.SuperAdmin)))
            {
                <span><a data-toggle="modal" data-target="#suppression"><img title="Supprimer" src="~/images/bin.png" width="32" /></a></span>

                @if (Model.Statut != ProjetCESI.Core.Statut.Suspendre && Model.TypePartage == ProjetCESI.Core.TypePartage.Public)
                {
                    <span class="m-1"><a data-toggle="modal" data-target="#suspendre"><img title="Suspendre" src="~/images/suspendre.png" width="32" /></a></span>
                }
                @if (Model.Statut == ProjetCESI.Core.Statut.Suspendre && Model.TypePartage == ProjetCESI.Core.TypePartage.Public)
                {
                    <div class="ressource-button">
                        <span><a data-toggle="modal" data-target="#reactivate"><img title="Réactiver" src="~/images/play_icone.png" width="32" /></a></span>
                    </div>
                }
            }
        </div>

        <span class="badge badge-pill badge-primary">@Html.DisplayFor(c => c.Categorie.Nom)</span>
        <span class="badge badge-pill badge-secondary">@Html.DisplayFor(c => c.TypeRessource.Nom)</span>

        @foreach (var relation in Model.TypeRelations)
        {
            <span class="badge badge-pill badge-success">@Html.DisplayFor(c => relation.Nom)</span>
        }
    </div>
    <div class="col-4 col-md-4">
        @if (User.Identity.IsAuthenticated && Model.Statut == ProjetCESI.Core.Statut.Accepter)
        {
            <div class="ressource-button">
                @if (Model.TypePartage == ProjetCESI.Core.TypePartage.Public)
                {
                    <span class="favoris badge badge-pill badge-info m-1" id="favoris"><img title="@(Model.EstFavoris ? "Supprimer des favoris" : "Ajouter aux favoris")" id="favoris-image" src="@(Model.EstFavoris ? "/images/004-star-1.svg" : "/images/003-star.svg")" style="width: 24px;" /><span class="m-2" id="favoris-texte">@(Model.EstFavoris ? "Supprimer des favoris" : "Ajouter aux favoris")</span></span><br />
                    <span class="cote badge badge-pill badge-info m-1" id="cote"><img title="@(!Model.EstMisDeCote ? "Mettre de côté" : "Supprimer des ressources mise de côté")" id="cote-image" src="@(!Model.EstMisDeCote ? "/images/001-clock.svg" : "/images/remove.svg")" style="width: 24px;" /><span class="m-2" id="cote-texte">@(!Model.EstMisDeCote ? "Mettre de côté" : "Supprimer des ressources mise de côté")</span></span><br />
                    <span class="exploite badge badge-pill badge-info m-1" id="exploite"><img title="@(!Model.EstExploite ? "Indiquer comme exploitée" : "Supprimer des ressources exploitées")" id="exploite-image" src="@(!Model.EstExploite ? "/images/002-check.png" : "/images/remove.svg")" style="width: 24px;" /><span class="m-2" id="exploite-texte">@(!Model.EstExploite ? "Indiquer comme exploitée" : "Supprimer des ressources exploitées")</span></span><br />
                }
                @if (Model.TypePartage == ProjetCESI.Core.TypePartage.Partage && Model.UtilisateurCreateur.UserName == User.Identity.Name)
                {
                    <span><a data-toggle="modal" data-target="#Share"><img title="" src="~/images/share.png" width="32" /></a></span>
                }
            </div>
        }
    </div>
</div>

@if (Model.TypeRessource == ProjetCESI.Core.TypeRessources.ActiviteJeu && User.Identity.IsAuthenticated)
{
    @if (Model.StatutActivite == ProjetCESI.Core.StatutActivite.NonDemare)
    {
        <div class="d-flex justify-content-center p-2">
            <form action="/Ressource/DemarrerActivite" method="post">
                <input value="@Model.RessourceId" name="ressourceId" hidden />
                <input type="submit" class="btn btn-danger" value="Démarrer l'activité" />
            </form>
        </div>
    }
    else
    {
        @if (Model.StatutActivite == ProjetCESI.Core.StatutActivite.EnPause)
        {
            <div class="d-flex justify-content-center p-2">
                <span class="align-middle p-3">Cette activité est en pause</span>
                <form action="/Ressource/ReprendreActivite" method="post" class="p-2">
                    <input value="@Model.RessourceId" name="ressourceId" hidden />
                    <input type="submit" class="btn btn-primary" value="Suspendre l'activité" />
                </form>
                <form action="/Ressource/QuitterActivite" method="post" class="p-2">
                    <input value="@Model.RessourceId" name="ressourceId" hidden />
                    <input type="submit" class="btn btn-danger" value="Quitter l'activité" />
                </form>
            </div>
        }
        else if (Model.StatutActivite == ProjetCESI.Core.StatutActivite.Demare)
        {
            <div class="d-flex justify-content-center p-2">
                <span class="align-middle p-3">Vous avez démarré cette activité</span>
                <form action="/Ressource/SuspendreActivite" method="post" class="p-2">
                    <input value="@Model.RessourceId" name="ressourceId" hidden />
                    <input type="submit" class="btn btn-primary" value="Suspendre l'activité" />
                </form>
                <form action="/Ressource/QuitterActivite" method="post" class="p-2">
                    <input value="@Model.RessourceId" name="ressourceId" hidden />
                    <input type="submit" class="btn btn-danger" value="Quitter l'activité" />
                </form>
                <form action="/Ressource/TerminerActivite" method="post" class="p-2">
                    <input value="@Model.RessourceId" name="ressourceId" hidden />
                    <input type="submit" class="btn btn-success" value="J'ai terminé l'activité" />
                </form>
            </div>
        }
        else
        {
            <div class="d-flex justify-content-center p-2">
                <strong class="align-middle">Vous avez terminé cette activité</strong>
            </div>
        }
    }
}

<div class="content">
    @Html.Raw(Model.Contenu)
</div>

@if (Model.Statut == ProjetCESI.Core.Statut.Accepter && Model.RessourceSupprime == false)
{
    <div class="comment-section">
        <h2>Commentaires</h2>
        <div id="response-editor">
            @if (User.Identity.IsAuthenticated)
            {
                <form id="ajout-commentaire">
                    <textarea id="Contenu" class="commentaire-editor" placeholder="Ajouter un commentaire..." rows="1"></textarea>
                </form>
            }
            <div class="collapse" id="submit-btn">
                <div class="d-flex justify-content-end">
                    <button class="btn btn-danger" id="annuler-commentaire">Annuler</button>
                    <button class="btn btn-primary" form="ajout-commentaire" id="envoyer-btn" disabled>Envoyer</button>
                </div>
            </div>
        </div>
        <div id="list-commentaire">
        </div>
    </div>
}
<!-- Modal reactivate -->
<div class="modal fade" id="reactivate" tabindex="-1" aria-labelledby="reactivate" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reactivate">Réactiver la ressource</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-controller="Ressource" asp-action="ReactivateRessource" method="post">
                <div class="modal-body">

                    <div class="mb-3">
                        <label for="message-text" class="col-form-label">Motif :</label>
                        <input type="number" value="@Model.RessourceId" name="ressourceId" hidden />
                        <textarea class="form-control" name="messageReactivate" id="messageReactivate"></textarea>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                    <button type="submit" class="btn btn-success">Réactiver</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Share -->
<div class="modal fade" id="Share" tabindex="-1" aria-labelledby="Share" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="Share">Lien à copier</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex my-2">
                    <input onClick="this.setSelectionRange(0, this.value.length)" class="form-control p-2 w-100 align-self-end" id="to-copy" value="@Model.ShareURL" aria-label="readonly input example" autofocus readonly>
                    <button id="copy" class="btn btn-primary btn-sm p-2" type="button">Copier</button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal suspendre -->
<div class="modal fade" id="suspendre" tabindex="-1" aria-labelledby="suspendre" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="suspendre">Suspendre la ressource</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-controller="Ressource" asp-action="SuspendreRessource" method="post">
                <div class="modal-body">

                    <div class="mb-3">
                        <label for="message-text" class="col-form-label">Motif :</label>
                        <input type="number" value="@Model.RessourceId" name="ressourceId" hidden />
                        <textarea class="form-control" name="messageSuspendre" id="messageSuspendre"></textarea>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                    <button type="submit" class="btn btn-danger">Suspendre</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal suppression -->
<div class="modal fade" id="suppression" tabindex="-1" aria-labelledby="suppression" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="suppression">Supprimer la ressource</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-controller="Ressource" asp-action="SupprimerRessource" method="post">
                <div class="modal-body">

                    <div class="mb-3">
                        <label for="message-text" class="col-form-label">Motif :</label>
                        <input type="number" value="@Model.RessourceId" name="ressourceId" hidden />
                        <textarea class="form-control" name="messageSuppression" id="messageSuppression"></textarea>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                    <button type="submit" class="btn btn-danger">Supprimer</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="chat">
    <div id="collapse-chat" class="collapser">
        <div style="margin: 0; position: absolute; top: 50%; -ms-transform: translateY(-50%); transform: translateY(-50%);">
            <span style="user-select: none">Discussion</span>
            <span id="message-count" style="display: none;"></span>
        </div>
    </div>
    <div class="messaging">
        <div class="inbox_msg">
            <div class="mesgs">
                <div class="msg_history">
                    <div style="width: 100%; text-align: center;"><small>Salon de discussion de la ressource @Model.Titre</small></div>
                </div>
            </div>
        </div>
        <form id="messageform" style="height: 10%">
            <input placeholder="Ecrivez un message..." type="text" id="messagebox" style="width: 100%; height: 100%" />
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/lib/autosize/dist/autosize.min.js"></script>
    <script>
    let estFavoris = @Model.EstFavoris.ToString().ToLower();
    let estMisDeCote = @Model.EstMisDeCote.ToString().ToLower();
    let estExploite = @Model.EstExploite.ToString().ToLower();

    $(document).ready(function () {
        getComments();
        autosize(document.querySelector('.commentaire-editor'));
        autosize(document.querySelector('.messagebox'));

        $('.commentaire-editor').focusin(function () {
            $('#submit-btn').collapse('show');
        });

        $('#annuler-commentaire').click(function () {
            resetEditor(document.querySelector('.commentaire-editor'));
            $('#submit-btn').collapse('toggle');
        });

        $('.commentaire-editor').keyup(function () {
            let value = $(this).val();

            if (value == '') {
                document.getElementById('envoyer-btn').disabled = true;
            }
            else {
                document.getElementById('envoyer-btn').disabled = false;
            }
        });

        $('#favoris').click(function () {
            let url = '';

            if (!estFavoris) {
                url = "/Ressource/AjouterFavoris";
            }
            else {
                url = "/Ressource/SupprimerFavoris";
            }

            $.ajax({
                url: url,
                method: "POST",
                data: {
                    ressourceId: @Model.RessourceId,
                }
            })
                .done(function () {
                    if (estFavoris) {
                        document.getElementById('favoris-image').src = "/images/003-star.svg";
                        document.getElementById('favoris-image').title = "Ajouter aux favoris";
                        document.getElementById('favoris-texte').innerText = "Ajouter aux favoris";
                        estFavoris = false;
                    }
                    else {
                        document.getElementById('favoris-image').src = "/images/004-star-1.svg";
                        document.getElementById('favoris-image').title = "Supprimer des favoris";
                        document.getElementById('favoris-texte').innerText = "Supprimer des favoris";
                        estFavoris = true;
                    }
            });
        });

        $('#cote').click(function () {
            let url = '';

            if (!estMisDeCote) {
                url = "/Ressource/AjouterMettreDeCote";
            }
            else {
                url = "/Ressource/SupprimerMettreDeCote";
            }

            $.ajax({
                url: url,
                method: "POST",
                data: {
                    ressourceId: @Model.RessourceId,
                }
            })
                .done(function () {
                    if (estMisDeCote) {
                        document.getElementById('cote-image').src = "/images/001-clock.svg";
                        document.getElementById('cote-image').title = "Mettre de côté";
                        document.getElementById('cote-texte').innerText = "Mettre de côté";
                        estMisDeCote = false;
                    }
                    else {
                        document.getElementById('cote-image').src = "/images/remove.svg";
                        document.getElementById('cote-image').title = "Supprimer des ressources mise de côté";
                        document.getElementById('cote-texte').innerText = "Supprimer des ressources mise de côté";
                        estMisDeCote = true;
                    }
            });
        });

        $('#exploite').click(function () {
            let url = '';

            if (!estExploite) {
                url = "/Ressource/AjouterExploite";
            }
            else {
                url = "/Ressource/SupprimerExploite";
            }

            $.ajax({
                url: url,
                method: "POST",
                data: {
                    ressourceId: @Model.RessourceId,
                }
            })
                .done(function () {
                    if (estExploite) {
                        document.getElementById('exploite-image').src = "/images/002-check.png";
                        document.getElementById('exploite-image').title = "Indiquer comme exploitée";
                        document.getElementById('exploite-texte').innerText = "Indiquer comme exploitée";
                        estExploite = false;
                    }
                    else {
                        document.getElementById('exploite-image').src = "/images/remove.svg";
                        document.getElementById('exploite-image').title = "Supprimer des ressources exploitées";
                        document.getElementById('exploite-texte').innerText = "Supprimer des ressources exploitées";
                        estExploite = true;
                    }
            });
        });

        @if(User.Identity.IsAuthenticated)
        {
        <text>
        $('#ajout-commentaire').submit(function(event) {
            event.preventDefault();

            $.ajax({
                url: "/Commentaire/AjouterCommentaire",
                method: "POST",
                data: {
                    contenu: $('#Contenu').val(),
                    utilisateurId: @Model.Utilisateur.Id,
                    ressourceId: @Model.RessourceId,
                }
            })
            .done(function (result) {
                resetEditor(document.querySelector('.commentaire-editor'));
                $('#submit-btn').collapse('toggle');
                document.getElementById("list-commentaire").innerHTML = result;
                document.getElementById('envoyer-btn').disabled = true;
            });
        });
        </text>
        }
    });

        function getComments() {
            $.ajax({
                url: "/Commentaire/GetCommentaires",
                method: "GET",
                data: {
                    ressourceId: @Model.RessourceId,
                }
            })
                .done(function (result) {
                    document.getElementById("list-commentaire").innerHTML = result;
                });
        }

        function deleteComment(commentId) {
            $.ajax({
                url: "/Commentaire/SuppressionCommentaire",
                method: "POST",
                data: {
                    ressourceId: @Model.RessourceId,
                    commId: commentId
                }
            })
                .done(function (result) {
                    document.getElementById("list-commentaire").innerHTML = result;
                });
        }


        function Clipboard() {
            TextCopy.ClipboardService.SetText("Text to place in clipboard");
        }

        var toCopy = document.getElementById('to-copy'),
            btnCopy = document.getElementById('copy');
        btnCopy.addEventListener('click', function () {
            toCopy.select();
            document.execCommand('copy');
            return false;
        });
    </script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/messageHub")
            .build();
    </script>

    <script>
        let chatIsToggled = false;
        let messageCount = 0;

        $(document).ready(function () {
            $("#messagebox").keypress(function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                    let message = $('#messagebox').val();
                    let sender = '@Model.Username';
                    $('#messagebox').val('');

                    if (message === null || message.match(/^ *$/) !== null)
                        return;

                    connection.invoke('SendMessage', sender, message, '@Model.RessourceId').catch(err => console.error(err.toString()));

                    $(this).val("");
                }
            });

            connection.on("ReceiveMessage", (user, message) => {
                appendLine(user, message);
            });

            connection.on("JoinedRoom", (user, message) => {
                roomEvent(message);
            });

            connection.start()
                .then(res => {
                    connection.invoke('Join', '@Model.RessourceId', '@Model.Username')
                        .catch(err => {
                            console.log(err);
                        });
                })
                .catch(err => console.error(err.toString()));

            $("#collapse-chat").click(function () {

                if (chatIsToggled) {
                    if (Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) > 1250) {
                        $('.chat').animate({
                            width: '10%'
                        }, 500);
                    }
                    else if (Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) > 600) {
                        $('.chat').animate({
                            width: '20%'
                        }, 500);
                    }

                    $('.messaging').animate({
                        height: 0
                    }, 500);

                    chatIsToggled = !chatIsToggled;
                }
                else {
                    $('.chat').animate({
                        width: '35%'
                    }, 500);

                    $('.messaging').animate({
                        height: '47vh'
                    }, 500);

                    chatIsToggled = !chatIsToggled;
                    document.getElementById('message-count').innerText = '';
                    document.getElementById('message-count').style.display = 'none';
                    messageCount = 0;
                }
            });
        });

        window.onbeforeunload = function () {
            connection.invoke('LeaveRoom', '@Model.RessourceId', '@Model.Username').catch(err => console.error(err.toString()));
            connection.stop();
        }

        function roomEvent(message) {
            $('.msg_history').append(`<div style="width: 100%; text-align: center;"><span>${message}</span></div>`);
            document.getElementsByClassName('msg_history')[0].scrollTop = document.getElementsByClassName('msg_history')[0].scrollHeight;
        };

        function appendLine(user, message) {
            messageCount++;
            if (!chatIsToggled && messageCount > 0) {
                document.getElementById('message-count').innerText = messageCount;
                document.getElementById('message-count').style.display = 'initial';
            }

            var dateNow = new Date().toLocaleString();

            if (user === '@Model.Username') {
                var divElement = document.createElement('div');
                divElement.className = 'outgoing_msg';
                var divChildElement = document.createElement('div');
                divChildElement.className = 'sent_msg';
                var userElement = document.createElement('strong');
                userElement.innerText = `Vous`;
                var text = document.createElement('p');
                text.innerText = ` ${message}`;
                var date = document.createElement('span');
                date.className = 'time_date';
                date.innerText = `${dateNow}`;

                divChildElement.appendChild(userElement);
                divChildElement.appendChild(text);
                divChildElement.appendChild(date);
                divElement.appendChild(divChildElement);
            }
            else {
                var divElement = document.createElement('div');
                divElement.className = 'incoming_msg';
                var divChildElement = document.createElement('div');
                divChildElement.className = 'received_msg';
                var divMsg = document.createElement('div');
                divMsg.className = 'received_withd_msg';
                var userElement = document.createElement('strong');

                user = user.includes('Anonyme') ? 'Anonyme' : user;

                userElement.innerText = `${user}`;
                var text = document.createElement('p');
                text.innerText = ` ${message}`;
                var date = document.createElement('span');
                date.className = 'time_date';
                date.innerText = `${dateNow}`;

                divMsg.appendChild(userElement);
                divMsg.appendChild(text);
                divMsg.appendChild(date);
                divChildElement.appendChild(divMsg);
                divElement.appendChild(divChildElement);
            }

            $('.msg_history').append(divElement);
            document.getElementsByClassName('msg_history')[0].scrollTop = document.getElementsByClassName('msg_history')[0].scrollHeight;
        };
    </script>
}
