@using ProjetCESI.Web.Models
@model RechercheRessourceViewModel

@{
    ViewData["Title"] = Model.Recherche;
}

<h3>Recherche</h3>

<div style="background-color: darkgrey; padding: 15px;">
    <form method="get" action="/Consultation/AdvancedSearch" id="recherche-avancee">
        @Html.EditorFor(model => model.Ressources.TypeTri, new { htmlAttributes = new { @value = Model.Ressources.TypeTri, @class = "form-control", hidden = "hidden", @id = "TypeTri" } })
        @Html.HiddenFor(model => model.Ressources.Page, new { @id = "page" })
        <div class="form-group">
            <strong>@Html.LabelFor(c => c.Recherche)</strong>
            @Html.EditorFor(model => model.Recherche, new { htmlAttributes = new { @class = "form-control", placeholder = "Recherche", required = "required" } })
        </div>
        <span>@Html.LabelFor(c => c.Recherche, "Filtrer les résultats par :")</span>
        <div class="form-row">
            <div class="form-group col-md-4">
                <strong>@Html.LabelFor(c => c.SelectedCategories, "Categories")</strong>
                <select data-placeholder="Sélectionnez des catégorie..." class="chosen-select form-control" name="SelectedCategories" multiple tabindex="1">
                    <option value=""></option>
                    @foreach (var categorie in ViewBag.Categories)
                    {
                        if (Model.SelectedCategories != null && Model.SelectedCategories.Contains(int.Parse(categorie.Value)))
                        {
                            <option value="@categorie.Value" selected>@categorie.Text</option>
                        }
                        else
                        {
                            <option value="@categorie.Value">@categorie.Text</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group col-md-4">
                <strong>@Html.LabelFor(c => c.SelectedTypeRessources, "Type de resssources")</strong>
                <select data-placeholder="Sélectionnez des types de ressources..." class="chosen-select form-control" name="SelectedTypeRessources" multiple tabindex="3">
                    <option value=""></option>
                    @foreach (var categorie in ViewBag.TypeRessources)
                    {
                        if (Model.SelectedTypeRessources != null && Model.SelectedTypeRessources.Contains(int.Parse(categorie.Value)))
                        {
                            <option value="@categorie.Value" selected>@categorie.Text</option>
                        }
                        else
                        {
                            <option value="@categorie.Value">@categorie.Text</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group col-md-4">
                <strong>@Html.LabelFor(c => c.SelectedTypeRelation, "Type de relation")</strong>
                <select data-placeholder="Sélectionnez des types de relations..." class="chosen-select form-control" name="SelectedTypeRelation" multiple tabindex="2">
                    <option value=""></option>
                    @foreach (var categorie in ViewBag.TypeRelation)
                    {
                        if (Model.SelectedTypeRelation != null && Model.SelectedTypeRelation.Contains(int.Parse(categorie.Value)))
                        {
                            <option value="@categorie.Value" selected>@categorie.Text</option>
                        }
                        else
                        {
                            <option value="@categorie.Value">@categorie.Text</option>
                        }
                    }
                </select>
            </div>
        </div>
        <strong>Filtrer par dates :</strong>
        <div class="form-row">
            <div class="form-group col-md-3">
                @Html.LabelFor(c => c.DateDebut)
                <input class="text-box single-line form-control" data-val="true" data-val-required="The Fin field is required." id="DateDebut" name="DateDebut" type="date" value="@(Model.DateDebut.HasValue ? Model.DateDebut.Value.ToString("yyyy-MM-dd")  : "")">
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(c => c.DateFin)
                <input class="text-box single-line form-control" data-val="true" data-val-required="The Fin field is required." id="DateFin" name="DateFin" type="date" value="@(Model.DateFin.HasValue ? Model.DateFin.Value.ToString("yyyy-MM-dd") : "")">
            </div>
        </div>
        <div class="d-flex justify-content-between">
            <small class="align-self-end">
                Catégories : <span class="badge badge-pill badge-primary">&nbsp;</span>
                Type de ressource : <span class="badge badge-pill badge-secondary">&nbsp;</span>
                Type de relation : <span class="badge badge-pill badge-success">&nbsp;</span>
            </small>
            <button type="button" class="btn btn-primary" onclick="submitSearch()">Recherche avancée</button>
        </div>
    </form>
</div>
@if (Model.Ressources.Ressources != null && Model.Ressources.Ressources.Any())
{
    <br />
    <div class="d-flex justify-content-between">
        <div>
            <span>Trier les résultats :</span>
            <select class="form-control" id="TypeTri" name="Ressources.TypeTri" style="display: initial; width: auto;" onchange="selectionChange(this)">
                @foreach (var tri in Html.GetEnumSelectList<ProjetCESI.Core.TypeTriBase>())
                {
                    if (Model.Ressources.TypeTri.ToString() == tri.Value)
                    {
                        <option value="@tri.Value" selected>@tri.Text</option>
                    }
                    else
                    {
                        <option value="@tri.Value">@tri.Text</option>
                    }
                }
            </select>
        </div>
        <div class="d-flex justify-content-end">
            @if (Model.Ressources.NombrePages > 1)
            {
                <ul class="pagination pagination-sm">
                    @for (int i = 1; i <= Model.Ressources.NombrePages; i++)
                    {
                        if (i == Model.Ressources.Page)
                        {
                            <li class="page-item active" aria-current="page">
                                <span class="page-link">
                                    @i
                                    <span class="sr-only">(current)</span>
                                </span>
                            </li>
                        }
                        else
                        {
                            string link = string.Empty;

                            <li class="page-item"><a class="page-link" onclick="goToPage(@i)" style="cursor: pointer">@i</a></li>
                        }
                    }
                </ul>
            }
        </div>
    </div>
}
@await Html.PartialAsync("ListeRessourcePartial", Model.Ressources)

@section Scripts{
    <script type="text/javascript">
        function submitSearch() {
            document.getElementById('page').setAttribute('value', 1);
            $('#recherche-avancee').submit();
        }

        function selectionChange(selection) {
            document.getElementById('TypeTri').setAttribute('value', selection.value);
            $('#recherche-avancee').submit();
        }

        function goToPage(page) {
            document.getElementById('page').setAttribute('value', page);
            $('#recherche-avancee').submit();
        }
    </script>
}
