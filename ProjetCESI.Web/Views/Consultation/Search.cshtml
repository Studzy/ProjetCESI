@using ProjetCESI.Web.Models
@model RechercheRessourceViewModel

@{
    ViewData["Title"] = "Recherche";
}

<h1 class="display-4">Recherche</h1>

<div style="background-color: darkgrey; padding: 15px;">
    @using (Html.BeginForm("Search", "Consultation", FormMethod.Post))
    {
        <div class="form-group">
            <strong>@Html.LabelFor(c => c.Recherche)</strong>
            @Html.EditorFor(model => model.Recherche, new { htmlAttributes = new { @class = "form-control", placeholder = "Recherche" } })
        </div>
        <strong>@Html.LabelFor(c => c.Recherche, "Filtrer les résultats par :")</strong>
        <div class="form-row">
            <div class="form-group col-md-4">
                @Html.LabelFor(c => c.SelectedCategories, "Categories")
                <select data-placeholder="Sélectionnez des catégorie..." class="chosen-select form-control" name="SelectedCategories" multiple tabindex="1">
                    <option value=""></option>
                    @foreach (var categorie in ViewBag.Categories)
                    {
                        if (Model.SelectedCategories != null && Model.SelectedCategories.Contains(int.Parse(categorie.Value)))
                        {
                            <option value="@categorie.Value" selected>@categorie.Text</option>
                        }
                        else
                        {
                            <option value="@categorie.Value">@categorie.Text</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(c => c.SelectedTypeRelation, "Type de relation")
                <select data-placeholder="Sélectionnez des types de relations..." class="chosen-select form-control" name="SelectedTypeRelation" multiple tabindex="2">
                    <option value=""></option>
                    @foreach (var categorie in ViewBag.TypeRelation)
                    {
                        if (Model.SelectedTypeRelation != null && Model.SelectedTypeRelation.Contains(int.Parse(categorie.Value)))
                        {
                            <option value="@categorie.Value" selected>@categorie.Text</option>
                        }
                        else
                        {
                            <option value="@categorie.Value">@categorie.Text</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(c => c.SelectedTypeRessources, "Type de resssources")
                <select data-placeholder="Sélectionnez des types de ressources..." class="chosen-select form-control" name="SelectedTypeRessources" multiple tabindex="3">
                    <option value=""></option>
                    @foreach (var categorie in ViewBag.TypeRessources)
                    {
                        if (Model.SelectedTypeRessources != null && Model.SelectedTypeRessources.Contains(int.Parse(categorie.Value)))
                        {
                            <option value="@categorie.Value" selected>@categorie.Text</option>
                        }
                        else
                        {
                            <option value="@categorie.Value">@categorie.Text</option>
                        }
                    }
                </select>
            </div>
        </div>
        <strong>Filtrer par dates :</strong>
        <div class="form-row">
            <div class="form-group col-md-3">
                @Html.LabelFor(c => c.DateDebut)
                <input class="text-box single-line form-control" data-val="true" data-val-required="The Fin field is required." id="DateDebut" name="DateDebut" type="date" value="@(Model.DateDebut.HasValue ? Model.DateDebut.Value.ToString("yyyy-MM-dd")  : "")">
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(c => c.DateFin)
                <input class="text-box single-line form-control" data-val="true" data-val-required="The Fin field is required." id="DateFin" name="DateFin" type="date" value="@(Model.DateFin.HasValue ? Model.DateFin.Value.ToString("yyyy-MM-dd") : "")">
            </div>
        </div>
        <div class="d-flex justify-content-between">
            <small class="align-self-end">
                Catégories : <span class="badge badge-pill badge-primary">&nbsp;</span>
                Type de relation : <span class="badge badge-pill badge-success">&nbsp;</span>
                Type de ressource : <span class="badge badge-pill badge-secondary">&nbsp;</span>
            </small>
            <button type="submit" class="btn btn-primary">Recherche avancée</button>
        </div>
    }
</div>
@if (Model.Ressources != null && Model.Ressources.Any())
{
<br />
<div class="row">
    @foreach (var ressource in Model.Ressources)
    {
    <div class="col-sm-6" id="ressource-card">
        <a href="#">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <h5 title="@ressource.Titre">@(ressource.Titre.Length > 35 ? $"{ressource.Titre.Substring(0, 35).TrimEnd()}...": ressource.Titre)</h5>
                        <small>Publié le @ressource.DateModification.ToString("dd/MM/yyyy")</small>
                    </div>
                    <p class="card-text">
                        <span class="badge badge-pill badge-primary">@ressource.Categorie.Nom</span><br />
                        <span class="badge badge-pill badge-secondary">@ressource.TypeRessource.Nom</span><br />                        
                        @foreach (var relation in ressource.TypeRelationsRessources)
                        {
                            <span class="badge badge-pill badge-success">@relation.TypeRelation.Nom</span>
                        }
                    </p>
                </div>
            </div>
        </a>
    </div>    
    }
</div>
}
else
{
    <p>
        Aucun résultat n'a été trouvé pour votre recherche
    </p>
}
